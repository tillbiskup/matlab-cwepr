function dataset = cwEPRdatasetCreate(varargin)
% CWEPRDATASETCREATE Create and return data structure of cwEPR dataset.
%
% Usage
%   dataset = cwEPRdatasetCreate
%   dataset = cwEPRdatasetCreate(<parameters>)
%
%   dataset    - struct
%                Structure complying with the data structure of the dataset
%                of the common toolbox
%
%   parameters - key-value pairs (OPTIONAL)
%
%                Optional parameters may include:
%
%                numberOfAxes      - scalar
%                                    Number of axes the dataset should have
%                                    Default: 2
%
%                hasOptionalFields - logical
%                                    Should  the dataset have optional
%                                    fields?
%                                    Default: false
%    
% Hint: Parameters can be provided as a structure with the fieldnames
% corresponding to the parameter names specified above.
%
% SEE ALSO: commonDatasetCreate, commonHistoryCreate, cwEPRhistoryCreate

% Copyright (c) 2015-16, Till Biskup
% Copyright (c) 2015, Deborah Meyer
% 2016-01-18

% Assign output parameter
dataset = struct();

% Parse input arguments using the inputParser functionality
p = inputParser;            % Create an instance of the inputParser class.
p.FunctionName = mfilename; % Function name to be included in error messages
p.KeepUnmatched = true;     % Enable errors on unmatched arguments
p.StructExpand = true;      % Enable passing arguments in a structure
% Add optional parameters, with default values
p.addParameter('numberOfAxes',2,@isscalar);
p.addParameter('hasOptionalFields',false,@islogical);
% Parse input arguments
p.parse(varargin{:});

% Define version of dataset structure
structureVersion = '0.2';

% Call function from common toolbox
EPRdataset = EPRdatasetCreate(...
    'numberOfAxes',p.Results.numberOfAxes,...
    'hasOptionalFields',p.Results.hasOptionalFields...
    );

dataset.parameters = struct(...
    'experiment',struct(...
        'type','',...
        'variableParameter','',...
        'increment',struct(...
            'value',[],...
            'unit','' ...
            ) ...
        ), ...
    'signalChannel',struct(...
        'model','',...
        'accumulations',1,...
        'modulation',struct(...
            'amplifier','',...
            'frequency',struct(...
                'value',[],...
                'unit','' ...
                ),...
            'amplitude',struct(...
                'value',[],...
                'unit','' ...
                ),...
            'phase',struct(...
                'value',[],...
                'unit','' ...
                ),...
            'conversionTime',struct(...
                'value',[],...
                'unit','' ...
                ),...
            'timeConstant',struct(...
                'value',[],...
                'unit','' ...
                )...
            ),...
        'receiverGain',1 ...
        ), ...
    'background',struct(...
        'filename','',...
        'type','' ...
        ) ...
    );

% Join common and cwEPR dataset structure
dataset = commonStructCopy(dataset,EPRdataset);

dataset.format(end+1) = struct(...
    'type','cwEPR dataset',...
    'version',structureVersion ...
    );

end
