function cwEPRspectralCharacteristicsDisp(characteristics)
% CWEPRSPECTRALCHARACTERISTICSDISP Plot characteristics calculated for
% cw-EPR spectrum in a user-friendly way.
%
% Usage
%   cwEPRspectralCharacteristicsDisp(characteristics)
%
%   characteristics - struct
%                     Structure with characteristics returned by the
%                     function "cwEPRspectralCharacteristics"
%
% SEE ALSO: cwEPRspectralCharacteristics

% Copyright (c) 2015, Till Biskup
% 2015-11-18

try
    % Parse input arguments using the inputParser functionality
    p = inputParser;            % Create inputParser instance.
    p.FunctionName = mfilename; % Include function name in error messages
    p.KeepUnmatched = true;     % Enable errors on unmatched arguments
    p.StructExpand = true;      % Enable passing arguments in a structure
    p.addRequired('characteristics',@(x)isstruct(x));
    p.parse(characteristics);
catch exception
    disp(['(EE) ' exception.message]);
    return;
end

message = {...
    '' ...
    'Characteristics for cw-EPR dataset' ...
    '----------------------------------' ...
    'sum of spectrum (phase error)' ...
    sprintf('       absolute: %e',characteristics.sum.absolute) ...
    sprintf('       relative: %e',characteristics.sum.relative) ...
    'line width' ...
    sprintf('      peak2peak: %f',characteristics.linewidth.pk2pk) ...
    sprintf('           FWHM: %f',characteristics.linewidth.fwhm) ...
    'position of maximum' ...
    sprintf('       integral: %f',characteristics.max.integral) ...
    sprintf('  zero crossing: %f',characteristics.max.zeroCrossing) ...
    'asymmetry' ...
    sprintf('       absolute: %f',characteristics.asymmetry.absolute) ...
    sprintf('       relative: %f',characteristics.asymmetry.relative) ...
    '' ...
    };

cellfun(@(x)fprintf('  %s\n',x),message);

end
